package com.abc.rule.people.secondipm

import com.abc.fuse.improve.attribute.FuseAttribute;
import com.abc.relation.RecordRelation;
import com.zhsq.biz.constant.people.PeopleItem;
import com.zhsq.biz.common.CommonCalculation;
import com.zhsq.biz.constant.CommonAlgorithm;
import com.abc.transfer.builder.IRootRecordBuilder;
import com.abc.transfer.builder.RootRecordBuilderFactory;
import com.zhsq.biz.constant.BaseConstant;
import com.zhsq.biz.constant.family.FamilyItem;
import com.zhsq.biz.constant.EnumKeyValue;
import com.zhsq.biz.constant.RelationType;
import com.abc.ops.builder.RecordRelationOpsBuilder;
import com.abc.rrc.record.RootRecord;

global java.lang.String hostCode; 
global java.lang.String hostType;

global java.lang.String userCode;
global java.lang.String recordCode;
global java.lang.String recordName;

global java.util.List rootRecordList;
global java.util.List recordRelationOpsBuilderNew;
global java.util.List attributeList;
global java.util.List addedLabelList;
global java.util.List removedLabelList;
global java.util.List addedLabelList;
global java.util.List addedLeafAttrList;
global java.util.Map removedLeafAttrMap;
global com.abc.rrc.record.RootRecord rootRecord;
global  com.abc.ops.builder.RecordRelationOpsBuilder recordRelationOpsBuilder;
global com.abc.complexus.RecordComplexus recordComplexus;

// 人的户籍地址和家庭的户籍地址保持一致	 若不一致， 建立新的家庭， 家庭关联当前人口
rule "人的户籍地和户籍家庭的户籍地不一致"
	salience 20
	when
		 FuseAttribute( name==PeopleItem.户籍所在地, CommonCalculation.isBasicLawful(value), $hjAddress:value)
		 RecordRelation(type == RelationType.RR_人口信息_户主家庭_家庭信息, $rightCode:right) 
		 eval(!$hjAddress.equals(CommonAlgorithm.getDataValue(recordComplexus, $rightCode, FamilyItem.户籍地址)))
	then 
		//新建家庭
		IRootRecordBuilder iRootRecordBuilder = RootRecordBuilderFactory.getPersistRootRecordBuilder(BaseConstant.TYPE_家庭信息);
		iRootRecordBuilder.putAttribute(FamilyItem.户籍地址, $hjAddress);
		iRootRecordBuilder.putAttribute(FamilyItem.家庭分类, EnumKeyValue.ENUM_家庭分类_户籍家庭);
		RootRecord record = iRootRecordBuilder.getRootRecord();
		rootRecordList.add(record);
		
		//添加关系
		RecordRelationOpsBuilder builderNew = RecordRelationOpsBuilder.getInstance(BaseConstant.TYPE_家庭信息,
					record.getCode());
		builderNew.putRelation(RelationType.RR_家庭信息_户主_人口信息, recordCode); 
		recordRelationOpsBuilderNew.add(builderNew);	
end

rule "人的户籍地和归属家庭的户籍地不一致"
	salience 20
	when
		 FuseAttribute( name==PeopleItem.户籍所在地, CommonCalculation.isBasicLawful(value), $hjAddress:value)
		 RecordRelation(type == RelationType.RR_人口信息_归属家庭_家庭信息, $rightCode:right) 
		 eval(!$hjAddress.equals(CommonAlgorithm.getDataValue(recordComplexus, $rightCode, FamilyItem.户籍地址)))
	then 
	
		//新建家庭
		IRootRecordBuilder iRootRecordBuilder = RootRecordBuilderFactory.getPersistRootRecordBuilder(BaseConstant.TYPE_家庭信息);
		iRootRecordBuilder.putAttribute(FamilyItem.户籍地址, $hjAddress);
		iRootRecordBuilder.putAttribute(FamilyItem.家庭分类, EnumKeyValue.ENUM_家庭分类_户籍家庭);
		RootRecord record = iRootRecordBuilder.getRootRecord();
		rootRecordList.add(record);
		
		//添加关系
		RecordRelationOpsBuilder builderNew = RecordRelationOpsBuilder.getInstance(BaseConstant.TYPE_家庭信息,
					record.getCode());
		builderNew.putRelation(RelationType.RR_家庭信息_成员_人口信息, recordCode); 
		recordRelationOpsBuilderNew.add(builderNew);	
end

rule "人没有户籍家庭关系"
	salience 25
	when
		 FuseAttribute( name==PeopleItem.户籍所在地, CommonCalculation.isBasicLawful(value), $hjAddress:value)
		 (not RecordRelation(type == RelationType.RR_人口信息_归属家庭_家庭信息))  &&  (not RecordRelation(type == RelationType.RR_人口信息_户主家庭_家庭信息)) 
	then 
		//新建家庭
		IRootRecordBuilder iRootRecordBuilder = RootRecordBuilderFactory.getPersistRootRecordBuilder(BaseConstant.TYPE_家庭信息);
		iRootRecordBuilder.putAttribute(FamilyItem.户籍地址, $hjAddress);
		iRootRecordBuilder.putAttribute(FamilyItem.家庭分类, EnumKeyValue.ENUM_家庭分类_户籍家庭);
		RootRecord record = iRootRecordBuilder.getRootRecord();
		rootRecordList.add(record);
		
		//添加关系
		RecordRelationOpsBuilder builderNew = RecordRelationOpsBuilder.getInstance(BaseConstant.TYPE_家庭信息,
					record.getCode());
		builderNew.putRelation(RelationType.RR_家庭信息_成员_人口信息, recordCode); 
		recordRelationOpsBuilderNew.add(builderNew);	
		
		System.out.println("333333333333333333333333333");
end
