package com.abc.rule.people.postimp

import com.abc.fuse.improve.attribute.FuseAttribute;
import com.abc.fuse.improve.attribute.OpsAttribute;
import com.abc.fuse.improve.attribute.OpsRecordRelation;
import com.abc.relation.RecordRelation;
import com.abc.fuse.improve.attribute.AddedRecordRelation;
import  com.zhsq.biz.constant.people.PeopleItem;
import  com.zhsq.biz.constant.family.FamilyItem;
import com.abc.rrc.record.Attribute;
import com.abc.rrc.factory.AttributeFactory;
import com.zhsq.biz.family.algorithm.DataIntrospection;
import com.zhsq.biz.constant.EnumKeyValue;
import com.zhsq.biz.constant.RelationType;
import com.abc.fuse.improve.attribute.leaf.FuseLeafAttribute;
import com.zhsq.biz.common.CommonCalculation;
import com.zhsq.biz.people.algorithm.IDIntrospection;
import com.zhsq.biz.constant.DateUtils;
import com.zhsq.biz.constant.BaseConstant;
import com.abc.relation.RelationCorrelation;
import com.abc.util.CodeManager;
import com.abc.util.ValueType;
import com.abc.fuse.improve.attribute.FuseLeafAttrFactory;

global java.lang.String hostCode; 
global java.lang.String hostType;

global java.lang.String userCode;
global java.lang.String recordCode;
global java.lang.String recordName;

global java.util.List attributeList;
global java.util.List addedLabelList;
global java.util.List removedLabelList;
global java.util.List addedLabelList;
global java.util.List putFuseLeafAttributeList;
global java.util.List addedLeafAttrList;
global java.util.Map removedLeafAttrMap;
global com.abc.rrc.record.RootRecord rootRecord;
global  com.abc.fuse.improve.ops.builder.RecordRelationOpsBuilder recordRelationOpsBuilder;
global com.abc.complexus.RecordComplexus recordComplexus;


rule "根据子女数量设置【是否独生子女】为是"
	salience 10 
when
	RecordRelation(type==RelationType.RR_人口信息_父母_人口信息,left==recordCode, $right:right);
	eval(IDIntrospection.getChildrenCount(recordComplexus,recordName, $right) ==1)
then 
	Attribute attrbute=AttributeFactory.newInstance(PeopleItem.是否独生子, EnumKeyValue.ENUM_是否_是);
	attributeList.add(attrbute);
end

rule "根据子女数量设置【是否独生子女】为否"
	salience 11 
when
	RecordRelation(type==RelationType.RR_人口信息_父母_人口信息,left==recordCode, $right:right);
	eval(IDIntrospection.getChildrenCount(recordComplexus,recordName, $right) != 1)
then 
	Attribute attrbute=AttributeFactory.newInstance(PeopleItem.是否独生子, EnumKeyValue.ENUM_是否_否);
	attributeList.add(attrbute);
end


//下面识别身份证号错误信息
rule "清空人口错误"
	salience 7
when
   $fa: FuseLeafAttribute(name==PeopleItem.人口错误信息_错误类型);
then  
	removedLeafAttrMap.put($fa.getLeafCode(), $fa.getName());
end 

rule "身份证校验错误"
	salience 6
when
    $idtype:FuseLeafAttribute(name==PeopleItem.证件信息_证件类型,value==EnumKeyValue.ENUM_证件类型_身份证,$leafCode:leafCode);
    $idValue:FuseLeafAttribute(name==PeopleItem.证件信息_证件号码,leafCode==$leafCode,CommonCalculation.isBasicLawful(value));
    eval(!IDIntrospection.inspectId($idValue.getValueForShow()));
then 
	String code = CodeManager.newCode32();
	FuseLeafAttribute leafAttr = FuseLeafAttrFactory.newInstance($idValue.getCode(), PeopleItem.人口错误信息, code, PeopleItem.人口错误信息_错误类型, EnumKeyValue.ENUM_错误类型_身份证错误);
	putFuseLeafAttributeList.add(leafAttr);
	FuseLeafAttribute leafAttr2 = FuseLeafAttrFactory.newInstance($idValue.getCode(), PeopleItem.人口错误信息, code, PeopleItem.人口错误信息_描述, "身份证校验错误");
	putFuseLeafAttributeList.add(leafAttr2);
end


rule "身份证号出生日期与出生日期属性是否一致"
	salience 5
when 
    $idtype1:FuseLeafAttribute(name==PeopleItem.证件信息_证件类型,value==EnumKeyValue.ENUM_证件类型_身份证,$leafCode:leafCode);
    $idValue1:FuseLeafAttribute(name==PeopleItem.证件信息_证件号码,leafCode==$leafCode,CommonCalculation.isBasicLawful(value));
   	$birthday: FuseAttribute(name==PeopleItem.出生日期 ,CommonCalculation.isBasicLawful(value))
    eval(!IDIntrospection.inspectBirthday($idValue1.getValueForShow(), $birthday.getValueForShow()));
then
	String code = CodeManager.newCode32();
	FuseLeafAttribute leafAttr = FuseLeafAttrFactory.newInstance($idValue1.getCode(), PeopleItem.人口错误信息, code, PeopleItem.人口错误信息_错误类型, EnumKeyValue.ENUM_错误类型_身份证错误);
	putFuseLeafAttributeList.add(leafAttr);
	FuseLeafAttribute leafAttr2 = FuseLeafAttrFactory.newInstance($idValue1.getCode(), PeopleItem.人口错误信息, code, PeopleItem.人口错误信息_描述, "身份证号出生日期与出生日期属性不一致");
	putFuseLeafAttributeList.add(leafAttr2);
end

rule "身份证号性别与性别属性是否一致"
	salience 5
when
    $idtype2:FuseLeafAttribute(name==PeopleItem.证件信息_证件类型,value==EnumKeyValue.ENUM_证件类型_身份证,$leafCode:leafCode);
    $idValue2:FuseLeafAttribute(name==PeopleItem.证件信息_证件号码,leafCode==$leafCode,CommonCalculation.isBasicLawful(value));
   	$sex: FuseAttribute(name==PeopleItem.性别 ,CommonCalculation.isBasicLawful(value))
    eval(!IDIntrospection.inspectSex($idValue2.getValueForShow(), String.valueOf($sex.getAttribute().getSqlValue())));
then  
	String code = CodeManager.newCode32();
	FuseLeafAttribute leafAttr = FuseLeafAttrFactory.newInstance($idValue2.getCode(), PeopleItem.人口错误信息, code, PeopleItem.人口错误信息_错误类型, EnumKeyValue.ENUM_错误类型_身份证错误);
	putFuseLeafAttributeList.add(leafAttr);
	FuseLeafAttribute leafAttr2 = FuseLeafAttrFactory.newInstance($idValue2.getCode(), PeopleItem.人口错误信息, code, PeopleItem.人口错误信息_描述, "身份证号性别与性别属性是不一致");
	putFuseLeafAttributeList.add(leafAttr2);
end

/*
rule "居家养老补助和残疾补助同时存在"
	salience 10 
when
	$grants: FuseLeafAttribute(name==PeopleItem.残疾人补助信息_补助类型, value==EnumKeyValue.ENUM_残疾人补助枚举_残疾补助);
	FuseLeafAttribute(name==PeopleItem.老人补助信息_补助类型, value==EnumKeyValue.ENUM_老人补助枚举_居家养老补助);
then 
	String code = CodeManager.newCode32();
	FuseLeafAttribute leafAttr = FuseLeafAttrFactory.newInstance($grants.getCode(), PeopleItem.人口错误信息, code, PeopleItem.人口错误信息_错误类型, EnumKeyValue.ENUM_错误类型_数据冲突);
	putFuseLeafAttributeList.add(leafAttr);
	FuseLeafAttribute leafAttr2 = FuseLeafAttrFactory.newInstance($grants.getCode(), PeopleItem.人口错误信息, code, PeopleItem.人口错误信息_描述, "居家养老补助和残疾补助同时存在");
	putFuseLeafAttributeList.add(leafAttr2);
end
*/