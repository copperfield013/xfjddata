package com.abc.rule.family.tipm

import com.abc.record.Attribute;
import com.abc.record.AttributeFactory;
import com.abc.record.RecordCompound;

import com.abc.fuse.attribute.FuseAttribute;
import com.abc.fuse.attribute.FuseMultiAttribute;
import com.abc.util.CodeManager;
import com.zhsq.biz.common.*;
import com.zhsq.biz.constant.people.*;
import com.zhsq.biz.constant.family.*;
import com.zhsq.biz.people.algorithm.*;
import com.zhsq.biz.family.algorithm.*;
import com.zhsq.biz.constant.*;

import com.abc.relation.RecordRelation;
import com.abc.relation.RelationCorrelation;
import com.abc.query.criteria.Criteria;
import java.util.Date;
import com.abc.auth.AuthHelper;


global java.util.List addedLabelList;
global java.util.List removedLabelList;
global java.util.List attributeList;
global java.util.List putFuseMultiAttributeList;
global java.util.List removedMultiAttrList;//根据name删除所有
global java.util.Map removedMultiAttrMap;//根据keyValue和name删除一行
global com.abc.record.RecordCompound recordCompound;

global java.lang.String userCode;
global java.lang.String recordCode;
global java.lang.String entityType;
global java.lang.String hostType;
global java.lang.String hostCode;
global  com.abc.complexus.RecordComplexus recordComplexus;
global com.abc.ops.RecordRelationOpsBuilder recordRelationOpsBuilder;

rule "家庭与人存在户主关系设置户主姓名"
	salience 10 
when
	FuseAttribute( name==FamilyItem.家庭分类, value==EnumKeyValue.ENUM_家庭分类_户籍家庭)
 	 RecordRelation(type==RelationType.RR_家庭信息_户主_人口信息,$peopleCode:right);
 	 eval( recordComplexus.getRecordCompound($peopleCode) !=null )
 	eval( recordComplexus.getRecordCompound($peopleCode).findAttribute(PeopleItem.姓名) !=null )
 	eval(recordComplexus.getRecordCompound($peopleCode).findAttribute(PeopleItem.姓名).getValueStrToSql() !=null)
then 
	//设置户主姓名
	Attribute name=AttributeFactory.newInstance(FamilyItem.户主姓名, recordComplexus.getRecordCompound($peopleCode).findAttribute(PeopleItem.姓名).getValueStrToSql());
	attributeList.add(name);	
end

rule "家庭与人存在户主关系设置户主身份证号"
	salience 10 
when
	FuseAttribute( name==FamilyItem.家庭分类, value==EnumKeyValue.ENUM_家庭分类_户籍家庭)
 	RecordRelation(type==RelationType.RR_家庭信息_户主_人口信息,$peopleCode:right);
 	eval( recordComplexus.getRecordCompound($peopleCode) !=null )
 	eval( recordComplexus.getRecordCompound($peopleCode).findAttribute(PeopleItem.身份证号码) !=null )
 	eval(recordComplexus.getRecordCompound($peopleCode).findAttribute(PeopleItem.身份证号码).getValueStrToSql() !=null)
then 
	//设置户主身份证号
	Attribute idCode=AttributeFactory.newInstance(FamilyItem.户主身份证号, recordComplexus.getRecordCompound($peopleCode).findAttribute(PeopleItem.身份证号码).getValueStrToSql());
	attributeList.add(idCode);
end

rule "家庭与人不存在户主关系设置户主姓名和身份证为空"
	salience 10 
when
	FuseAttribute( name==FamilyItem.家庭分类, value==EnumKeyValue.ENUM_家庭分类_户籍家庭)
 	not RecordRelation(type==RelationType.RR_家庭信息_户主_人口信息);
then 
	//设置户主姓名
	Attribute name=AttributeFactory.newInstance(FamilyItem.户主姓名, null);
	attributeList.add(name);
	//设置户主身份证号
	Attribute idCode=AttributeFactory.newInstance(FamilyItem.户主身份证号, null);
	attributeList.add(idCode);
end

rule "设置家庭人口数"
	salience 10 
when
 	exists RecordRelation();
then 
	Integer count = DataIntrospection.getFamilyPeoCount(recordComplexus, hostCode);
	//设置家庭人口数量
	Attribute attr=AttributeFactory.newInstance(FamilyItem.家庭总人数, count);
	attributeList.add(attr);
end

//验证家庭信息中的错误
/*
rule "清空家庭错误"
	salience 7
when
   $fa: FuseMultiAttribute(name==FamilyItem.家庭错误信息_错误类型);
then 
	removedMultiAttrMap.put(FamilyItem.家庭错误信息_错误类型, $fa.getCode());
end

rule "家庭没有户主"
	salience 6
when
	$value :FuseAttribute( name==FamilyItem.家庭地址 )
	FuseAttribute( name==FamilyItem.家庭分类, value==EnumKeyValue.ENUM_家庭分类_户籍家庭)
 	not RecordRelation(type == RelationType.RR_家庭信息_户主_人口信息);
then 
	String code = CodeManager.newCode();

 	FuseMultiAttribute attrA= new FuseMultiAttribute();
 	attrA.setMultiName(FamilyItem.家庭错误信息);
 	attrA.setName(FamilyItem.家庭错误信息_错误类型);
 	attrA.setValue(EnumKeyValue.ENUM_错误类型_家庭信息错误);
 	attrA.setKeyValue(code);
 	putFuseMultiAttributeList.add(attrA);
 	
 	FuseMultiAttribute attrB= new FuseMultiAttribute();
 	attrB.setMultiName(FamilyItem.家庭错误信息);
 	attrB.setName(FamilyItem.家庭错误信息_描述);
 	attrB.setValue("家庭没有户主");
 	attrB.setKeyValue(code);
 	putFuseMultiAttributeList.add(attrB);
end

rule "家庭有户主但是和户主关系不是户主"
	salience 6
when
	FuseAttribute( name==FamilyItem.家庭分类, value==EnumKeyValue.ENUM_家庭分类_户籍家庭)
	$value :FuseAttribute( name==FamilyItem.家庭地址 )
 	 RecordRelation(type == RelationType.RR_家庭信息_户主_人口信息, $huzCode:right);
 	 eval(recordComplexus.getRecordCompound($huzCode) != null)
 	 eval( recordComplexus.getRecordCompound($huzCode).findAttribute(PeopleItem.和户主关系) !=null)
 	 eval( !String.valueOf(EnumKeyValue.ENUM_和户主关系_户主).equals(recordComplexus.getRecordCompound($huzCode).findAttribute(PeopleItem.和户主关系).getValueStrToSql()) )
then 
	String code = CodeManager.newCode();

 	FuseMultiAttribute attrA= new FuseMultiAttribute();
 	attrA.setMultiName(FamilyItem.家庭错误信息);
 	attrA.setName(FamilyItem.家庭错误信息_错误类型);
 	attrA.setValue(EnumKeyValue.ENUM_错误类型_家庭信息错误);
 	attrA.setKeyValue(code);
 	putFuseMultiAttributeList.add(attrA);
 	
 	FuseMultiAttribute attrB= new FuseMultiAttribute();
 	attrB.setMultiName(FamilyItem.家庭错误信息);
 	attrB.setName(FamilyItem.家庭错误信息_描述);
 	attrB.setValue("家庭有户主但是和户主关系不是户主");
 	attrB.setKeyValue(code);
 	putFuseMultiAttributeList.add(attrB);
end

rule "家庭中户主大于一个"
	salience 6
when
	FuseAttribute( name==FamilyItem.家庭分类, value==EnumKeyValue.ENUM_家庭分类_户籍家庭)
	$value :FuseAttribute( name==FamilyItem.家庭地址 )
 	RecordRelation(type == RelationType.RR_家庭信息_户主_人口信息, $left:left);
 	eval(DataIntrospection.getHzCount(recordComplexus, $left)>1 )
then 
	String code = CodeManager.newCode();

 	FuseMultiAttribute attrA= new FuseMultiAttribute();
 	attrA.setMultiName(FamilyItem.家庭错误信息);
 	attrA.setName(FamilyItem.家庭错误信息_错误类型);
 	attrA.setValue(EnumKeyValue.ENUM_错误类型_家庭信息错误);
 	attrA.setKeyValue(code);
 	putFuseMultiAttributeList.add(attrA);
 	
 	FuseMultiAttribute attrB= new FuseMultiAttribute();
 	attrB.setMultiName(FamilyItem.家庭错误信息);
 	attrB.setName(FamilyItem.家庭错误信息_描述);
 	attrB.setValue("家庭中户主大于一个");
 	attrB.setKeyValue(code);
 	putFuseMultiAttributeList.add(attrB);
end

*/